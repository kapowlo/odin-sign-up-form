@import url("https://fonts.cdnfonts.com/css/norse");

/*reset*/
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}
:root {
  /*custom properties/variable for padding and margin to be added here */
  --norse-ff: "Norse", sans-serif;
  --fs-small: 1.09rem;
  --fs: 1.5rem;
  --fs-XL: 5rem;
  --bg-transparent: rgba(255, 255, 255, 0.28);
  --text-padding: 2rem;
  --column-gap-small: 3.5em;
}

body {
  background: bisque;

  display: flex;
}

header {
  flex: 1 1 25%;
  height: 110vh;
  /*included fall back in case image does'nt load */
  background-image: url("img/bg-img-greenleafplant.avif"),
    linear-gradient(to right, black, rgb(123, 65, 6));
  background-size: cover;
}
.hero {
  height: inherit;

  display: flex;
  flex-direction: column;
  justify-content: space-between;
}
.container-img-text {
  /*create some space for the logo and the text inside */
  /*  padding-top: 1.5rem; */
  margin-top: 7rem;

  width: 100%;
  height: 22%;
  border-radius: 2.25rem;
  background-color: var(--bg-transparent);
  opacity: 0.65;

  display: flex;
  justify-content: center;
}

.wrapper-img {
  /*get the viking hat logo inside of the div with the green transparent background */
  display: flex;
  align-items: center;
}

.wrapper-text {
  /*text odin should be next to image */

  margin: auto 0;
}

div.wrapper-text p {
  color: black;
  font-weight: bold;
  font-size: var(--fs-XL);
  font-family: var(--norse-ff);
}
.hero .copyright,
.hero .copyright a {
  color: black;
  font-weight: bolder;
}
.copyright {
  text-align: center;
  background-color: var(--bg-transparent);
  font-size: 36px; /*made the copyright text a lot  bigger */
  opacity: 0.69;
}
a {
  text-decoration: underline black;
}
a:focus,
a:hover {
  /* when user hover his mouse above link*/
  font-size: 1.25em;

  text-shadow: 1px 2px green;
}

/*style for main section */
main {
  padding: 5rem 0 5rem 0;
  background-color: whitesmoke;

  /*this section should be bigger than the header i'll use flex basis to control the default size */
  /*at minimum it will take up 50% of the page but if there's available space it'll cover up that available space */
  flex: 1 1 50%;
  /* display: flex;
  flex-direction: column; */
}
/*make form appearance more consistent across browsers */
button,
input {
  font-size: 100%;
  font-family: inherit;
}
main > p {
  width: 43rem; /*55ch */ /*27.483em */ /*keep this for now but the text doesn't line up properly*/
  padding-left: var(--text-padding);
  margin-bottom: 1rem;
  font-size: var(--fs);
  font-weight: bolder;
}
fieldset ~ p {
  /*selects every p element that is preceded by a fieldset element
  this will only select the p element that is outside of my fieldset */
  padding-left: var(--text-padding);
}
form {
  margin-top: 2.5rem;
}
fieldset {
  height: 350px; /*will be changed */
  border: none;
  padding: 2.9em 0 2em 2rem;
  background-color: white;
  /*used to position the legend */
  position: relative;
}
legend {
  margin-top: 1rem;

  font-size: var(--fs);
  color: black;
  font-weight: bold;
  /*will be used to position legend correctly  */
  position: absolute;
  top: -5px;
}
fieldset div {
  height: 100px;
}
.first-row {
  display: flex;
  column-gap: var(--column-gap-small);
}
.second-row {
  display: flex;
  column-gap: var(--column-gap-small);
}
.third-row {
  display: flex;
  column-gap: var(--column-gap-small);
}
input {
  width: 19rem;
  padding: 4px;
  /*put each input fields below each of the labels by changing the display  */
  display: block;
}
input:focus,
input:hover {
  background-color: rgba(235, 235, 235, 0.33);
  outline: none;
}

input:invalid {
  border: 1px solid red;
}

input:valid {
  border: 1px solid green;
}
input + span {
  /*the span element that come after the input(siblings) will be positioned relative so that I can use position absolute
  and position the generated content relative to the span
  */
  position: relative;
}
input:required + span::after {
  /*I will add either an asterisk * or "required"text after the span element of the input fields that are required */
  content: "required";
  color: white;
  background-color: black;

  /*position the required or asterisk to the top right just above my input fields */
  position: absolute;
  right: -365px;
  top: -57px;
}

input + span::before {
  /*position the ✖ and ✓ to the top right and inside of input fields */
  position: absolute;
  right: -379px;
  top: -35px;
}
input:invalid + span::before {
  /*add an x when input field is invalid */
  content: " ✖ ";
  color: red;
}
input:valid + span::before {
  /*add an ✓ when input field is valid */
  content: "✓";
  color: darkgreen;
}

button {
  margin: 2rem;
  padding: 6px 10px;
  width: 210px;
  border-radius: 6px;
  background-color: #176717;

  font-size: 24px;
}

span {
  color: #176717;
}
